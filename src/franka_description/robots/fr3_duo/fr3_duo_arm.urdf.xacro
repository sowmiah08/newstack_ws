<?xml version='1.0' encoding='utf-8'?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="fr3_duo">

  <xacro:include filename="$(find franka_description)/robots/common/franka_robot.xacro"/>
  <xacro:include filename="$(find franka_description)/robots/fr3_duo/fr3_duo_mount/fr3_duo_mount.xacro" />

  <!--
    DEPRECATION NOTICE
    argument arm_id is no longer supported and will be removed in the future.
    This argument is ignored.
  -->
  <xacro:arg name="arm_id" default="fr3v2" />

  <!-- The prefix of the robot -->
  <xacro:arg name="arm_prefix" default="" />

  <!-- Don't print a prefix for joints, visuals, and links? -->
  <xacro:arg name="no_prefix" default="false"/>

  <!-- Should an end-effector be mounted at the flange?" -->
  <xacro:arg name="hand" default="true" />

  <!-- Which end-effector would be mounted at the flange?" -->
  <xacro:arg name="ee_id" default="franka_hand" />

  <!-- Where is the end-effector connected to, if different from the robot flange?  -->
  <xacro:arg name="special_connection" default="" />

  <!-- Position offset between ee and parent frame -->
  <xacro:arg name="xyz_ee" default="0 0 0" />

  <!-- Rotation offset between ee and parent frame -->
  <xacro:arg name="rpy_ee" default= "0 0 ${-pi/4}" />

  <!-- Position offset between ee frame and tcp frame -->
  <xacro:arg name="tcp_xyz" default="0 0 0.1034" />

  <!-- Rotation offset between ee frame and tcp frame -->
  <xacro:arg name="tcp_rpy" default="0 0 0" />

  <!-- Safety distance for the collision capsules -->
  <xacro:arg name="safety_distance" default="0.03" />

  <!-- Should self-collision be enabled? -->
  <xacro:arg name="with_sc" default="false" />

  <!-- Is the robot being controlled with ros2_control?" -->
  <xacro:arg name="ros2_control" default="false" />

  <!-- IP address or hostname of the robot" -->
  <xacro:arg name="robot_ip" default="" />

  <!-- Should a fake hardware be used? -->
  <xacro:arg name="use_fake_hardware" default="false" />

  <!-- Should fake sensors be used? -->
  <xacro:arg name="fake_sensor_commands" default="false" />

  <!-- Should the robot be spawned in Gazebo?" -->
  <xacro:arg name="gazebo" default="false" />

  <!-- Should the robot be spawned in Gazebo with effort interfaces?" -->
  <xacro:arg name="gazebo_effort" default="false" />

  <!-- Name of the description package -->
  <xacro:arg name="description_pkg" default="franka_description" />
  
  <!-- Append an underscore to the user-provided prefix, if non-empty. -->
  <xacro:property name="prefix" value="$(arg arm_prefix)"/>
  <xacro:property name="modified_prefix" value="${prefix + '_' if prefix else ''}"/>

  <link name="base">
  </link>

  <xacro:arg name="mount_kinematics" default="$(find franka_description)/robots/fr3_duo/fr3_duo_mount/kinematics.yaml"/>
  <xacro:property name="mount_to_base" value="${xacro.load_yaml('$(arg mount_kinematics)')}"/>
  <xacro:property name="arm_id_i" value="$(arg arm_id)"/>
  <xacro:property name="arm_prefix_i" value="$(arg arm_prefix)"/>
  <joint name="${arm_prefix_i}_base_joint" type="fixed">
    <parent link="base"/>
    <child link="${arm_prefix_i}_base"/>
    <xacro:if value="${arm_prefix_i == 'left'}">
      <xacro:property name="mount_corner" value="${mount_to_base['left']}" lazy_eval="false" />
    </xacro:if>
    <xacro:if value="${arm_prefix_i == 'right'}">
      <xacro:property name="mount_corner" value="${mount_to_base['right']}" lazy_eval="false" />
    </xacro:if>
    <origin rpy="${mount_corner.kinematic.roll} ${mount_corner.kinematic.pitch} ${mount_corner.kinematic.yaw}" xyz="${mount_corner.kinematic.x} ${mount_corner.kinematic.y} ${mount_corner.kinematic.z}"/>
  </joint>
    
  
  <xacro:arg name="inertials_path" default="$(find franka_description)/robots/${arm_id_i}/inertials.yaml"/>
  <xacro:arg name="kinematics_path" default="$(find franka_description)/robots/${arm_id_i}/kinematics.yaml"/>
  <xacro:arg name="dynamics_path" default="$(find franka_description)/robots/${arm_id_i}/dynamics.yaml"/>
  <xacro:arg name="joint_limits_path" default="$(find franka_description)/robots/${arm_id_i}/joint_limits.yaml"/>
  <xacro:franka_robot arm_id="${arm_id_i}"
                      joint_limits="${xacro.load_yaml('$(arg joint_limits_path)')}"
                      inertials="${xacro.load_yaml('$(arg inertials_path)')}"
                      kinematics="${xacro.load_yaml('$(arg kinematics_path)')}"
                      dynamics="${xacro.load_yaml('$(arg dynamics_path)')}"
                      gazebo="$(arg gazebo)"
                      hand="$(arg hand)"
                      ee_id="$(arg ee_id)"
                      special_connection="$(arg special_connection)"
                      xyz_ee="$(arg xyz_ee)"
                      rpy_ee="$(arg rpy_ee)"
                      tcp_xyz="$(arg tcp_xyz)"
                      tcp_rpy="$(arg tcp_rpy)"
                      safety_distance="$(arg safety_distance)"
                      with_sc="$(arg with_sc)"
                      ros2_control="$(arg ros2_control)"
                      robot_ip="$(arg robot_ip)"
                      use_fake_hardware="$(arg use_fake_hardware)"
                      fake_sensor_commands="$(arg fake_sensor_commands)"
                      gazebo_effort="$(arg gazebo_effort)"
                      no_prefix="$(arg no_prefix)"
                      arm_prefix= "${modified_prefix}"
                      description_pkg="$(arg description_pkg)"
                      connected_to="${arm_prefix_i}_base">
      </xacro:franka_robot>
</robot>